---
import IconComponent from './IconComponent.jsx';
import { HiHome } from "react-icons/hi2";

const navItems = [
    {
        title: "Inicio",
        label: "inicio",
        url: "/#inicio",
    },  
    {
        title: "Proyectos",
        label: "proyectos",
        url: "/#proyectos",
    },
    {
        title: "Skills",
        label: "skills",
        url: "/#skills",
    },     
    {
        title: "Sobre m√≠",
        label: "sobre-mi",
        url: "/#sobre-mi",
    },
    {
        title: "Contacto",
        label: "contacto",
        url: "mailto:rossileandrof@gmail.com",
    }
]
---

<header
  class="fixed top-0 z-50 flex items-center justify-center w-full mx-auto mt-2"
>
  <nav
    class="flex px-3 text-sm sm:text-base font-medium rounded-full text-gray-200 justify-center items-center"
  >
    {
      navItems.map((link) => (
        <a
          class="relative block px-2 py-2 transition hover:text-blue-500"
          aria-label={link.label}
          href={link.url}
        >
          {link.title === "Inicio" ? 
          <IconComponent icon={HiHome} className={`text-gray-200 size-4 sm:size-6 hover:text-blue-500 ${link.label === "inicio" ? "active" : ""}`}/>
          :
          link.title}
        </a>
      ))
    }    
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-gray-500")
              if (item.getAttribute("aria-label") === "inicio") {
                const icon = item.querySelector('svg');
                icon.classList.add("text-gray-500");
              }
              const newUrl = `${window.location.pathname}#${entry.target.id}`;
              history.pushState(null, null, newUrl);
            } else {
              item.classList.remove("text-gray-500")
              if (item.getAttribute("aria-label") === "inicio") {
                const icon = item.querySelector('svg');
                icon.classList.remove("text-gray-500");
              }
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur bg-gray-800/90 ring-white/10;
    }
  }
</style>